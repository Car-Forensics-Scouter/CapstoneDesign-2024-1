{"ast":null,"code":"var _jsxFileName = \"/Users/choseongbin/Desktop/Capstone/CapstoneDesign-2024-1/frontend/logger-react-app/src/components/Video.js\";\nimport Thumbnail from \"../assets/sample_image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Video(props) {\n  function call(api, method, request) {\n    let options = {\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      }),\n      url: \"http://localhost:8080\" + api,\n      method: method\n    };\n    if (request) {\n      // GET METHOD\n      options.body = JSON.stringify(request);\n    }\n    return fetch(options.url, options).then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        throw new Error(\"Network response was not ok.\");\n      }\n    }).catch(error => {\n      console.log(\"http error\");\n      console.log(error);\n    });\n  }\n  ;\n  const deviceId = \"F1234\";\n\n  /*\n  const downloadVideo = () => {\n      const url = \"API 주소\";\n      const reponse = call(`${url}?deviceId=${encodeURIComponent(deviceId)}&videoIndex=${encodeURIComponent(props.number)}`, \"GET\", null);\n      reponse.blob().then((blob) => {\n          const blobUrl = window.URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = blobUrl;\n          link.download = \"비디오 파일 이름.확장자\";\n          link.click();\n          window.URL.revokeObjectURL(blobUrl);\n      }).catch((e) => console.error(\"Download error:\", e));\n  };\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Video\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index\",\n        children: [\"#\", props.number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download\",\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"from\",\n      children: [\"From: \", props.from]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to\",\n      children: [\"To: \", props.to]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["Thumbnail","jsxDEV","_jsxDEV","Video","props","call","api","method","request","options","headers","Headers","url","body","JSON","stringify","fetch","then","response","ok","Error","catch","error","console","log","deviceId","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","number","class","from","to","_c","$RefreshReg$"],"sources":["/Users/choseongbin/Desktop/Capstone/CapstoneDesign-2024-1/frontend/logger-react-app/src/components/Video.js"],"sourcesContent":["import Thumbnail from \"../assets/sample_image.png\";\n\nfunction Video(props) {\n\n    function call(api, method, request) {\n        let options = {\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n            }),\n            url: \"http://localhost:8080\" + api,\n            method: method,\n        };\n\n        if(request) {\n            // GET METHOD\n            options.body = JSON.stringify(request);\n        }\n\n        return fetch(options.url, options).then((response) => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                throw new Error(\"Network response was not ok.\");\n            }\n        }).catch((error) => {\n            console.log(\"http error\");\n            console.log(error);\n        })\n    };\n\n    const deviceId = \"F1234\";\n\n    /*\n    const downloadVideo = () => {\n        const url = \"API 주소\";\n        const reponse = call(`${url}?deviceId=${encodeURIComponent(deviceId)}&videoIndex=${encodeURIComponent(props.number)}`, \"GET\", null);\n        reponse.blob().then((blob) => {\n            const blobUrl = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = blobUrl;\n            link.download = \"비디오 파일 이름.확장자\";\n            link.click();\n            window.URL.revokeObjectURL(blobUrl);\n        }).catch((e) => console.error(\"Download error:\", e));\n    };\n*/\n\n    return (\n        <div className=\"Video\">\n            <img src={Thumbnail}/>\n            <div className=\"main\">\n                <div className=\"index\">#{props.number}</div>\n                <div className=\"download-button\">\n                    <i class=\"fa-solid fa-download\"/>\n                    <div className=\"download\">Download</div>\n                </div>\n            </div>\n            <div className=\"from\">From: {props.from}</div>\n            <div className=\"to\">To: {props.to}</div>\n        </div>\n    );\n}\n\nexport default Video;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAACC,KAAK,EAAE;EAElB,SAASC,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;IAChC,IAAIC,OAAO,GAAG;MACVC,OAAO,EAAE,IAAIC,OAAO,CAAC;QACjB,cAAc,EAAE;MACpB,CAAC,CAAC;MACFC,GAAG,EAAE,uBAAuB,GAAGN,GAAG;MAClCC,MAAM,EAAEA;IACZ,CAAC;IAED,IAAGC,OAAO,EAAE;MACR;MACAC,OAAO,CAACI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC;IAC1C;IAEA,OAAOQ,KAAK,CAACP,OAAO,CAACG,GAAG,EAAEH,OAAO,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;MAClD,IAAGA,QAAQ,CAACC,EAAE,EAAE;QACZ,OAAOD,QAAQ;MACnB,CAAC,MACI;QACD,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;MACnD;IACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;EAAC;EAED,MAAMG,QAAQ,GAAG,OAAO;;EAExB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBzB,OAAA;MAAK0B,GAAG,EAAE5B;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtB9B,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBzB,OAAA;QAAKwB,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAC,GAAC,EAACvB,KAAK,CAAC6B,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5C9B,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BzB,OAAA;UAAGgC,KAAK,EAAC;QAAsB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjC9B,OAAA;UAAKwB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACN9B,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAC,QAAA,GAAC,QAAM,EAACvB,KAAK,CAAC+B,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9C9B,OAAA;MAAKwB,SAAS,EAAC,IAAI;MAAAC,QAAA,GAAC,MAAI,EAACvB,KAAK,CAACgC,EAAE;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAACK,EAAA,GA5DQlC,KAAK;AA8Dd,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
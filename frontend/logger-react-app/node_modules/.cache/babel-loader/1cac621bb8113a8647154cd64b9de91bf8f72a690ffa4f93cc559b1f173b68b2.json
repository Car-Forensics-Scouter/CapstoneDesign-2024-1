{"ast":null,"code":"var _jsxFileName = \"/Users/choseongbin/Desktop/Capstone/CapstoneDesign-2024-1/frontend/logger-react-app/src/pages/GraphDashboard.js\",\n  _s = $RefreshSig$();\nimport \"./GraphDashboard.css\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport { errorAlert } from \"../components/alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphDashboard() {\n  _s();\n  const [startTime, setStartTime] = useState();\n  const [finishTime, setFinishTime] = useState();\n  const [data, setData] = useState([]); // 가져온 전체 데이터\n\n  const handleStartTimeChange = e => {\n    setStartTime(e.target.value);\n  };\n  const handleFinishTimeChange = e => {\n    setFinishTime(e.target.value);\n  };\n\n  // 디바이스 아이디 : 로그인 시 로컬 스토리지에 저장\n  const deviceId = localStorage.getItem(\"device-id\");\n\n  // useCallback은 useEffect\n  const fetchData = useCallback(async () => {\n    try {\n      // 데이터 가져오는 함수 구성.\n      const url = \"http://localhost:8080/api/obdlog/date-range\";\n      const parameter = `${url}?deviceId=${encodeURIComponent(deviceId)}&startDate=${encodeURIComponent(startTime)}&endDate=${encodeURIComponent(finishTime)}`;\n      const response = await axios.get(parameter, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        console.log(\"그래프 데이터를 성공적으로 로드했습니다.\");\n      } else {\n        errorAlert(\"그래프 데이터를 성공적으로 얻어오지 못 했습니다.\");\n        return;\n      }\n\n      // 가져온 데이터들을 Data에 저장.\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      if (error.response) {\n        console.error(\"응답 오류: \", error.response.data);\n        console.error(\"응답 상태: \", error.response.status);\n        console.error(\"응답 헤더: \", error.response.headers);\n        errorAlert(`데이터 패치 실패: ${error.response.data}`);\n      } else if (error.request) {\n        console.error(\"요청 오류: \", error.request);\n        errorAlert(\"서버 응답이 없습니다. 나중에 다시 시도해주세요.\");\n      } else {\n        console.error(\"데이터 요청 중 오류 발생: \", error.message);\n        errorAlert(\"데이터 요청 중 오류가 발생했습니다.\");\n      }\n    }\n  }, [startTime, finishTime, deviceId]);\n\n  // startTime, finishTime 바뀔 때마다 fetchData 실행 \n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Download 버튼 누를 시 전체 데이터 가져옴.\n  const downloadData = () => {\n    const url = \"http://localhost:8080/api/obdlog/~~~\";\n    const parameter = `${url}?deviceId=${encodeURIComponent(deviceId)}&startDate=${encodeURIComponent(startTime)}&endDate=${encodeURIComponent(finishTime)}`;\n    const response = axios.get(parameter, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      withCredentials: true\n    });\n    response.blob().then(blob => {\n      const blobUrl = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = blobUrl;\n      link.download = \"CFS_REPORT.xlsx\";\n      link.click();\n      window.URL.revokeObjectURL(blobUrl);\n    }).catch(e => console.error(\"Download error:\", e));\n  };\n\n  // 그래프 기본 옵션(SPEED에 기반해서 나머지 만듦)\n  const options = {\n    chart: {\n      type: \"area\",\n      height: 350,\n      background: \"#ffffff\"\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: \"straight\"\n    },\n    title: {\n      text: \"SPEED\",\n      // 여기에 데이터 이름\n      align: \"left\"\n    },\n    subtitle: {\n      text: \"km/h\",\n      // 여기에 데이터 단위\n      align: \"left\"\n    },\n    labels: [startTime, finishTime],\n    xaxis: {\n      type: \"datetime\"\n    },\n    yaxis: {\n      opposite: false\n    },\n    legend: {\n      horizontalAlign: \"left\"\n    }\n  };\n\n  // 그래프별 세부 옵션\n  const rpm_options = {\n    ...options,\n    title: {\n      text: \"RPM\"\n    },\n    subtitle: {\n      text: \"rpm\"\n    }\n  };\n  const engine_load_options = {\n    ...options,\n    title: {\n      text: \"ENGINE LOAD\"\n    },\n    subtitle: {\n      text: \"percent(%)\"\n    }\n  };\n  const throttle_pos_options = {\n    ...options,\n    title: {\n      text: \"THROTTLE POSITION\"\n    },\n    subtitle: {\n      text: \"\"\n    }\n  };\n  const fuel_level_options = {\n    ...options,\n    title: {\n      text: \"FUEL LEVEL\"\n    },\n    subtitle: {\n      text: \"LEVEL\"\n    }\n  };\n  const barometric_press_options = {\n    ...options,\n    title: {\n      text: \"BAROMETRIC PRESSURE\"\n    },\n    subtitle: {\n      text: \"℃\"\n    }\n  };\n  const run_time_options = {\n    ...options,\n    title: {\n      text: \"RUN TIME\"\n    },\n    subtitle: {\n      text: \"TIME(DAY:HH:MM\"\n    }\n  };\n  const distance_options = {\n    ...options,\n    title: {\n      text: \"DISTANCE\"\n    },\n    subtitle: {\n      text: \"℃\"\n    }\n  };\n  const coolant_temp_options = {\n    ...options,\n    title: {\n      text: \"COOLANT TEMPERATURE\"\n    },\n    subtitle: {\n      text: \"℃\"\n    }\n  };\n\n  // 데이터 형식 통일 및 시간 데이터 처리\n  const formattedData = data.map(entry => ({\n    x: new Date(entry.timeStamp).getTime(),\n    speed: entry.speed,\n    rpm: entry.rpm,\n    engineLoad: entry.engineLoad,\n    throttlePos: entry.throttlePos,\n    fuelLevel: entry.fuelLevel,\n    barometricPressure: entry.barometricPressure,\n    runTime: entry.runTime,\n    distance: entry.distance,\n    coolantTemp: entry.coolantTemp\n  }));\n\n  // x, y축에 맞춤.\n  const speedSeries = {\n    name: 'Speed',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.speed\n    }))\n  };\n  const rpmSeries = {\n    name: 'RPM',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.rpm\n    }))\n  };\n  const engineLoadSeries = {\n    name: 'Engine Load',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.engineLoad\n    }))\n  };\n  const throttlePosSeries = {\n    name: 'Throttle Position',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.throttlePos\n    }))\n  };\n  const fuelLevelSeries = {\n    name: 'Fuel Level',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.fuelLevel\n    }))\n  };\n  const barometricPressureSeries = {\n    name: 'Barometric Pressure',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.barometricPressure\n    }))\n  };\n  const runTimeSeries = {\n    name: 'Run Time',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.runTime\n    }))\n  };\n  const distanceSeries = {\n    name: 'Distance',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.distance\n    }))\n  };\n  const coolantTempSeries = {\n    name: 'Coolant Temperature',\n    data: formattedData.map(entry => ({\n      x: entry.x,\n      y: entry.coolantTemp\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Graphs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Data Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-button\",\n          onClick: downloadData,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download\",\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        color: \"#E5E5E5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-setting\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"TIME RANGE :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from\",\n          children: \"FROM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-time\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"start\",\n            value: startTime,\n            onChange: handleStartTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"to\",\n          children: \"TO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"finish-time\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            id: \"finish\",\n            value: finishTime,\n            onChange: handleFinishTimeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: [/*#__PURE__*/_jsxDEV(Chart, {\n          options: options,\n          series: [speedSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: rpm_options,\n          series: [rpmSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: engine_load_options,\n          series: [engineLoadSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: throttle_pos_options,\n          series: [throttlePosSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: fuel_level_options,\n          series: [fuelLevelSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: barometric_press_options,\n          series: [barometricPressureSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: runTimeSeries,\n          series: [run_time_options],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: distance_options,\n          series: [distanceSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: coolant_temp_options,\n          series: [coolantTempSeries],\n          type: \"area\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphDashboard, \"BkDvrLuyRlDtLwM/4i9vH3Ccwps=\");\n_c = GraphDashboard;\nexport default GraphDashboard;\nvar _c;\n$RefreshReg$(_c, \"GraphDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Chart","axios","errorAlert","jsxDEV","_jsxDEV","GraphDashboard","_s","startTime","setStartTime","finishTime","setFinishTime","data","setData","handleStartTimeChange","e","target","value","handleFinishTimeChange","deviceId","localStorage","getItem","fetchData","url","parameter","encodeURIComponent","response","get","headers","withCredentials","status","console","log","result","json","error","request","message","downloadData","blob","then","blobUrl","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","catch","options","chart","type","height","background","dataLabels","enabled","stroke","curve","title","text","align","subtitle","labels","xaxis","yaxis","opposite","legend","horizontalAlign","rpm_options","engine_load_options","throttle_pos_options","fuel_level_options","barometric_press_options","run_time_options","distance_options","coolant_temp_options","formattedData","map","entry","x","Date","timeStamp","getTime","speed","rpm","engineLoad","throttlePos","fuelLevel","barometricPressure","runTime","distance","coolantTemp","speedSeries","name","y","rpmSeries","engineLoadSeries","throttlePosSeries","fuelLevelSeries","barometricPressureSeries","runTimeSeries","distanceSeries","coolantTempSeries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","class","color","id","onChange","series","_c","$RefreshReg$"],"sources":["/Users/choseongbin/Desktop/Capstone/CapstoneDesign-2024-1/frontend/logger-react-app/src/pages/GraphDashboard.js"],"sourcesContent":["import \"./GraphDashboard.css\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport axios from \"axios\";\r\nimport { errorAlert } from \"../components/alert\";\r\n\r\nfunction GraphDashboard() {\r\n    const [startTime, setStartTime] = useState();\r\n    const [finishTime, setFinishTime] = useState();\r\n    const [data, setData] = useState([]);   // 가져온 전체 데이터\r\n\r\n    const handleStartTimeChange = (e) => {\r\n        setStartTime(e.target.value);\r\n    };\r\n\r\n    const handleFinishTimeChange = (e) => {\r\n        setFinishTime(e.target.value);\r\n    };\r\n\r\n    // 디바이스 아이디 : 로그인 시 로컬 스토리지에 저장\r\n    const deviceId = localStorage.getItem(\"device-id\");\r\n    \r\n    // useCallback은 useEffect\r\n    const fetchData = useCallback(async () => {\r\n        try {\r\n            // 데이터 가져오는 함수 구성.\r\n            const url = \"http://localhost:8080/api/obdlog/date-range\";\r\n            const parameter = `${url}?deviceId=${encodeURIComponent(deviceId)}&startDate=${encodeURIComponent(startTime)}&endDate=${encodeURIComponent(finishTime)}`;\r\n            const response = await axios.get(parameter, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                withCredentials: true\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log(\"그래프 데이터를 성공적으로 로드했습니다.\");\r\n            } else {\r\n                errorAlert(\"그래프 데이터를 성공적으로 얻어오지 못 했습니다.\");\r\n                return\r\n            }\r\n\r\n            // 가져온 데이터들을 Data에 저장.\r\n            const result = await response.json();\r\n            setData(result);\r\n            \r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"응답 오류: \", error.response.data);\r\n                console.error(\"응답 상태: \", error.response.status);\r\n                console.error(\"응답 헤더: \", error.response.headers);\r\n                errorAlert(`데이터 패치 실패: ${error.response.data}`);\r\n              } else if (error.request) {\r\n                console.error(\"요청 오류: \", error.request);\r\n                errorAlert(\"서버 응답이 없습니다. 나중에 다시 시도해주세요.\");\r\n              } else {\r\n                console.error(\"데이터 요청 중 오류 발생: \", error.message);\r\n                errorAlert(\"데이터 요청 중 오류가 발생했습니다.\");\r\n            }\r\n        }\r\n    }, [startTime, finishTime, deviceId]);\r\n\r\n    // startTime, finishTime 바뀔 때마다 fetchData 실행 \r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData])\r\n\r\n\r\n    // Download 버튼 누를 시 전체 데이터 가져옴.\r\n    const downloadData = () => {\r\n        const url = \"http://localhost:8080/api/obdlog/~~~\";\r\n        const parameter = `${url}?deviceId=${encodeURIComponent(deviceId)}&startDate=${encodeURIComponent(startTime)}&endDate=${encodeURIComponent(finishTime)}`;\r\n        const response = axios.get(parameter, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            withCredentials: true\r\n        });\r\n\r\n        response.blob().then((blob) => {\r\n            const blobUrl = window.URL.createObjectURL(blob);\r\n            const link = document.createElement(\"a\");\r\n            link.href = blobUrl;\r\n            link.download = \"CFS_REPORT.xlsx\";\r\n            link.click();\r\n            window.URL.revokeObjectURL(blobUrl);\r\n        }).catch((e) => console.error(\"Download error:\", e));\r\n    };\r\n\r\n \r\n    // 그래프 기본 옵션(SPEED에 기반해서 나머지 만듦)\r\n    const options = {\r\n        chart: {\r\n          type: \"area\",\r\n          height: 350,\r\n          background: \"#ffffff\"\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: \"straight\"\r\n        },\r\n        title: {\r\n          text: \"SPEED\", // 여기에 데이터 이름\r\n          align: \"left\"\r\n        },\r\n        subtitle: {\r\n          text: \"km/h\", // 여기에 데이터 단위\r\n          align: \"left\"\r\n        },\r\n        labels: [startTime, finishTime],\r\n        xaxis: {\r\n          type: \"datetime\",\r\n        },\r\n        yaxis: {\r\n          opposite: false,\r\n        },\r\n        legend: {\r\n          horizontalAlign: \"left\"\r\n        }\r\n    };\r\n\r\n\r\n    // 그래프별 세부 옵션\r\n    const rpm_options = {\r\n        ...options,\r\n        title: { text: \"RPM\" },\r\n        subtitle: { text: \"rpm\"}\r\n    }\r\n\r\n    const engine_load_options = {\r\n        ...options,\r\n        title: { text: \"ENGINE LOAD\" },\r\n        subtitle: { text: \"percent(%)\"}\r\n    }\r\n\r\n    const throttle_pos_options = {\r\n        ...options,\r\n        title: { text: \"THROTTLE POSITION\" },\r\n        subtitle: { text: \"\" }\r\n    }\r\n\r\n    const fuel_level_options = {\r\n        ...options,\r\n        title: { text: \"FUEL LEVEL\" },\r\n        subtitle: { text: \"LEVEL\"}\r\n    }\r\n\r\n    const barometric_press_options = {\r\n        ...options,\r\n        title: { text: \"BAROMETRIC PRESSURE\" },\r\n        subtitle: { text: \"℃\"}\r\n    }\r\n\r\n    const run_time_options = {\r\n        ...options,\r\n        title: { text: \"RUN TIME\" },\r\n        subtitle: { text: \"TIME(DAY:HH:MM\"}\r\n    }\r\n\r\n    const distance_options = {\r\n        ...options,\r\n        title: { text: \"DISTANCE\" },\r\n        subtitle: { text: \"℃\"}\r\n    }\r\n    \r\n    const coolant_temp_options = {\r\n        ...options,\r\n        title: { text: \"COOLANT TEMPERATURE\" },\r\n        subtitle: { text: \"℃\"}\r\n    }\r\n\r\n    // 데이터 형식 통일 및 시간 데이터 처리\r\n    const formattedData = data.map(entry => ({\r\n        x: new Date(entry.timeStamp).getTime(),\r\n        speed: entry.speed,\r\n        rpm: entry.rpm,\r\n        engineLoad: entry.engineLoad,\r\n        throttlePos: entry.throttlePos,\r\n        fuelLevel: entry.fuelLevel,\r\n        barometricPressure: entry.barometricPressure,\r\n        runTime: entry.runTime,\r\n        distance: entry.distance,\r\n        coolantTemp: entry.coolantTemp\r\n    }));\r\n\r\n    // x, y축에 맞춤.\r\n    const speedSeries = { name: 'Speed', data: formattedData.map(entry => ({ x: entry.x, y: entry.speed })) };\r\n    const rpmSeries = { name: 'RPM', data: formattedData.map(entry => ({ x: entry.x, y: entry.rpm })) };\r\n    const engineLoadSeries = { name: 'Engine Load', data: formattedData.map(entry => ({ x: entry.x, y: entry.engineLoad })) };\r\n    const throttlePosSeries = { name: 'Throttle Position', data: formattedData.map(entry => ({ x: entry.x, y: entry.throttlePos })) };\r\n    const fuelLevelSeries = { name: 'Fuel Level', data: formattedData.map(entry => ({ x: entry.x, y: entry.fuelLevel })) };\r\n    const barometricPressureSeries = { name: 'Barometric Pressure', data: formattedData.map(entry => ({ x: entry.x, y: entry.barometricPressure })) };\r\n    const runTimeSeries = { name: 'Run Time', data: formattedData.map(entry => ({ x: entry.x, y: entry.runTime })) };\r\n    const distanceSeries = { name: 'Distance', data: formattedData.map(entry => ({ x: entry.x, y: entry.distance })) };\r\n    const coolantTempSeries = { name: 'Coolant Temperature', data: formattedData.map(entry => ({ x: entry.x, y: entry.coolantTemp })) };\r\n\r\n\r\n    return (\r\n    <div className=\"Graphs\">\r\n        <div className=\"wrap\">\r\n            <div className=\"head\">\r\n                <div className=\"title\">\r\n                    Data Graph\r\n                </div>\r\n                <div className=\"download-button\" onClick={downloadData}>\r\n                    <i class=\"fa-solid fa-download\"/>\r\n                    <div className=\"download\">Download</div>\r\n                </div>\r\n            </div>\r\n            <hr color=\"#E5E5E5\"/>\r\n            <div className=\"time-setting\">\r\n                <div className=\"title\">TIME RANGE :</div>\r\n                <div className=\"from\">FROM</div>\r\n                <div className=\"start-time\">\r\n                    <input type=\"datetime-local\" id=\"start\" value={startTime} onChange={handleStartTimeChange}/>\r\n                </div>\r\n                <div className=\"to\">TO</div>\r\n                <div className=\"finish-time\">\r\n                    <input type=\"datetime-local\" id=\"finish\" value={finishTime} onChange={handleFinishTimeChange}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                <Chart options={options} series={[speedSeries]} type=\"area\" height={350}/>\r\n                <Chart options={rpm_options} series={[rpmSeries]} type=\"area\" height={350}/>\r\n                <Chart options={engine_load_options} series={[engineLoadSeries]} type=\"area\" height={350}/>\r\n                <Chart options={throttle_pos_options} series={[throttlePosSeries]} type=\"area\" height={350}/>\r\n                <Chart options={fuel_level_options} series={[fuelLevelSeries]} type=\"area\" height={350}/>\r\n                <Chart options={barometric_press_options} series={[barometricPressureSeries]} type=\"area\" height={350}/>\r\n                <Chart options={runTimeSeries} series={[run_time_options]} type=\"area\" height={350}/>\r\n                <Chart options={distance_options} series={[distanceSeries]} type=\"area\" height={350}/>\r\n                <Chart options={coolant_temp_options} series={[coolantTempSeries]} type=\"area\" height={350}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default GraphDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}